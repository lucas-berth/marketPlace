Project started: March 30th 2024

Currently working:
My original thought was to have the contract transfer from the seller to buyer like a traditonal marketplace... 
But, the seller technically still has the contract in the terms of their debt and the buyer being a investor

In this case we would want to setup the contract to be duplicated to the Buyers inventory 


04.11.24
Now that we have buying and selling working we can try to get the program to run. Have the user input contracts, buyers or sellers. 
Have the program run and iniative a buying or selling sequence. May bring in some price negoiations or bidding into the buying method. 
May have an option to upload a spread sheet of buyers, sellers and contracts... -> pandas?


04.18.24
Contracts are properly printing with the help of the __str__ method added to Contracts. 
Buyers can now drop contracts 
Started the actual "play by play" within main. Getting stuck when adding contracts to the seller. Needs different syntax or logic. Start in main run_program()
        #help https://www.geeksforgeeks.org/get-user-input-in-loop-using-python/


04.21.24
Got the main run_program() function to run through a full scenario of the seller adding contracts.
With there only being one user, having a buying and selling side simultaneously will be hard. May try this with adding virtual machine users accross a network (AWS)
Next goal is to add a sql database within the contract class to add all contracts to a database and maybe even sellers for a relational schema. 
        --getting started with MongoDB: https://www.mongodb.com/developer/languages/python/python-quickstart-crud/
    -- "login" to the app as the seller to add contracts to a DB. Then login as buyer to "purchase" contracts -- start here. 
    -- more complicated SQL work could remove items from the DB and add it to the buyer DB or something of the like.

According to research, you have to insert a document (insert statement) in order to create the new database 
             help:   https://www.w3schools.com/python/python_mongodb_insert.asp#:~:text=To%20insert%20a%20record%2C%20or,document%20you%20want%20to%20insert.
Becuase I am using Atlas cloud this might be different. 


04.27.24 - 04.28.24
The most useful resource was a method to get a particular value out of the mongodb document: 
                        https://stackoverflow.com/questions/31077812/how-do-i-get-the-id-from-an-objectid-using-python
Current status:
Working on iterating the IDs to ensure they are inserted orderly.
I have a video linked in the operations class that should give me a better idea on how to read in the noSQL data
Goal for next session:
        Get the Ids to iterate as contracts are added to the DB.
        *note: DB has 2 items currently and is at 135MB out of 500MB.
        

04.30.24
Found a new system for tracking bought and sold contracts that is more simplified. 
        --need to see if we can add another attribute to a document that is already created
                --date sold (datetime field)

Work on implementing the Database functions into the run_program() function in main
Potentially look to link to API to grab mock data or live contracts as a next iteration to the project.
***Or -> look to add database functionality for buyers and sellers to make the project more complete


05.01.24
Was able to create the sellers collection database and add multiple contracts in an array format to the document
        --https://stackoverflow.com/questions/62827951/how-to-insert-array-list-of-objects-in-existing-mongodb-document

**future state, may want to consider some redundancy by adding logic to check database for existing items
